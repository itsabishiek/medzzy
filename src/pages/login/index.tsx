import {
  Box,
  Stack,
  Typography,
  Button,
  CircularProgress,
  TextField,
} from "@mui/material";
import Head from "next/head";
import Link from "next/link";
import React, { useState } from "react";
import { useSignInWithEmailAndPassword } from "react-firebase-hooks/auth";
import { auth } from "../../firebase/clientApp";
import { useRouter } from "next/router";
import { FIREBASE_ERRORS } from "../../firebase/errors";
import Image from "next/image";

type LoginProps = {};

const Login: React.FC<LoginProps> = () => {
  const [loginForm, setLoginForm] = useState({
    email: "",
    password: "",
  });
  const router = useRouter();

  const [signInWithEmailAndPassword, user, userLoading, userError] =
    useSignInWithEmailAndPassword(auth);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setLoginForm((prev) => ({
      ...prev,
      [e.target.name]: e.target.value,
    }));
  };

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    signInWithEmailAndPassword(loginForm.email, loginForm.password);
    router.push("/dashboard");
  };

  return (
    <>
      <Head>
        <title>Login - Medzzy!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/img/logo.png" />
      </Head>

      <Stack
        flexDirection="row"
        alignItems="center"
        justifyContent="center"
        height="100vh"
      >
        <Stack alignItems="center" justifyContent="center" padding="0px 35px">
          <Box width={{ xs: "100%", md: "420px" }}>
            <form onSubmit={handleSubmit}>
              <Stack alignItems="center" gap="25px" width="100%">
                <Typography fontWeight={600} fontSize="28px" color="brand.100">
                  Login
                </Typography>

                <TextField
                  type="email"
                  name="email"
                  placeholder="Email"
                  sx={{
                    height: "50px",
                    width: "100%",
                    "&:focus": { border: "1px solid #27c399" },
                  }}
                  onChange={handleChange}
                />
                <TextField
                  type="password"
                  name="password"
                  placeholder="Password"
                  sx={{
                    height: "50px",
                    width: "100%",
                    "&:focus": { border: "1px solid #27c399" },
                  }}
                  onChange={handleChange}
                />

                <Stack flexDirection="row" alignItems="center" gap="5px" mt={1}>
                  <Typography>Not have an account?</Typography>
                  <Link href="/register">
                    <Typography color="var(--accent-color)" fontWeight={500}>
                      Create one
                    </Typography>
                  </Link>
                </Stack>

                {userError && (
                  <Typography fontSize="11pt" color="red.200">
                    {
                      FIREBASE_ERRORS[
                        userError?.message as keyof typeof FIREBASE_ERRORS
                      ]
                    }
                  </Typography>
                )}

                <Button type="submit" fullWidth variant="contained">
                  {userLoading ? (
                    <CircularProgress color="inherit" size="25px" />
                  ) : (
                    "Login"
                  )}
                </Button>
              </Stack>
            </form>
          </Box>
        </Stack>
      </Stack>
    </>
  );
};
export default Login;
